
server.port=8083
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=jHd12712@6

# DDL generation
spring.jpa.hibernate.ddl-auto=update

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

logging.level.root=INFO
# EUREKA SERVER CONFIGURATIONS
#spring.application.name=USER-SERVICE
#eureka.instance.prefer-ip-address=true
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone= http://localhost:8761/eureka

# Config Client
spring.config.import=optional:configserver:http://localhost:8087
#spring.profiles.active=default

# Actuator
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#management.endpoints.web.expose=health,metrics
management.endpoints.web.expose=*
#management.endpoints.web.exposure.include={health,metrics}
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true
management.metrics.enable.resilience4j.circuitbreaker.calls=true
management.health.circuitbreakers.enabled=true

# Resileance Fault Tolerence
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.recordstore.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.recordstore.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.recordstore.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.recordstore.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.recordstore.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.recordstore.sliding-window-size=10
resilience4j.circuitbreaker.instances.recordstore.sliding-window-type=COUNT_BASED

#resilience4j.circuitbreaker.instances.recordstore.enable-exponential-backoff=true
resilience4j.circuitbreaker.instances.recordstore.writable-stack-trace-enabled=true

resilience4j.retry.instances.ratingHotelRetry.max-attempts=3
resilience4j.retry.instances.ratingHotelRetry.wait-duration=3s

resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=2s

#Okta config
# Okta Security
#okta.oauth2.issuer=https://dev-69384545.okta.com/oauth2/default
#okta.oauth2.audience=api://default

#Spring security  oauth2 client
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-69384545.okta.com/oauth2/default
#spring.security.oauth2.client.registration.my-internal-client.provider=okta
#spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.my-internal-client.scope=internal
#spring.security.oauth2.client.registration.my-internal-client.client-id=0oa8baj6ltw6Tnl1h5d7
#spring.security.oauth2.client.registration.my-internal-client.client-secrete=Oskp002yFVzvlFehc1j6DzaL7sd-sR58pJbhe77P
#
#spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-69384545.okta.com/oauth2/default
